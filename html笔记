HTML基础教程
一、什么是HTML？
HTML是用来描述网页的一种语言
HTML指的是超文本标记语言
HTML不是编程语言，而是一种标记语言（标记语言是余套标记标签）
什么是HTML标签？
用尖括号包围的关键词，如“<html>”
HTML标签是成对出现的，比如<b></b>,第一个是开始标签，第二个是结束标签。
<html>
<body>

<h1>我的第一个标题</h1>

<p>我的第一个段落</p>

</body>
</html>
二、HTML标题
标题是通过<h1>-<h6>等标签进行定义的。
<h1>定义最大的标题,<h6>定义最小的标题。
HTML水平线
使用水平线(<hr>标签)来分割文章中的小节是一个办法（但不是惟一的办法）
HTML注释：
<!--****-->
三、HTML段落
标签<p></p>(p是块级元素)
HTML折行：
<br/>
四、HTML文本格式化
<b>定义粗体文本
<big>定义大号字
<em>定义着重文字
<i>定义斜体字
<small>定义小号字
<strong>定义加重语气
<sub>定义下标字
<sup>定义上标字
<ins>定义插入字
<del>定义删除字
<pre>定义预格式文本
<abbr>定义缩写
<acronym>定义首字母缩写
<address>定义地址
<bdo>定义文字方向
<blockquote>定义长的引用
<q>定义短的引用语
五、HTML链接
<a href="url">Link text</a>
target属性：="blank",会在新的页面打开网址。
六|HTML图像
<img src="url">
alt属性：替换文本属性，一旦url失效，网页会显示替换文本。
七、HTML表格
表格由<table>标签来定义。每个表格均有若干行（由<tr>标签定义），每行被分割为若干单元格（由<td>标签定义）。字母td指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等。
边框属性：border=""
表头：<th></th>
空单元格：<td></td>
八、HTML列表
有序列表始于<ol>标签，每个列表项始于<li>标签。
自定义列表：
以标签<dl>开始，每个自定义列表以<dt>开始。每个自定义列表项以<dd>开始。每个自定义列表项以
<div>和<span>元素
<div>是块级元素，用于其他HTML元素的容器。一般用div元素进行网页布局。
<span>是内联元素，可用作文本的容器。
HTML响应式设计：
响应式网页设计能够以可变尺寸传递网页、响应式网页设计对于平和移动设备是必须的。
另一个创建响应式设计的方法是使用现成的CSS框架。Bootstrap是最流行的开发响应式web的HTML，CSS和JS框架。
Bootstrap帮助您开发任何尺寸都外观出众的站点：显示器、笔记本电脑、平板电脑或手机。
九、计算机输出标签
<code>计算机输出</code>
<kbd>键盘输入</kbd>
<tt>打字机文本</tt>
<samp>计算机代码样本</samp>
<var>计算机变量</var>
十、地址：
<address>Written by <a href="mailto:webmaster@example.com">Jon Doe</a><br>
Visit us at<br>
Example.com<br>
Box 564,Disneyland<br>
USA
</address>
十一、删除引用：
<del></del>删除标签
<ins><ins>引用标签
十二、表单
表单使用表单标签<form>来设置
文本域：<input type="text" name="">
密码字段：<input type="password" name="">
单选按钮：<input type="radio" name="" value="">
复选框：<input type="checkbox" name="" value="">
提交按钮<input type="submit" value="">
下拉列表：
<form action="文件路径" method="get/post">
<select name="cars">
<option value="volvo">volvo</option>
<option value="saab">saab</option>
<option value="fiat">Fiat</option>
<option value="audi">Audi</option>
</select>
</form>
预选下拉列表
<form action="">
<select name="cars">
<option value="volvo">volvo</option>
<option value="saab">saab</option>
<option value="fiat" selected>Fiat</option>
<option value="audi">Audi</option>
</select>
</form>
创建按钮：
<input type="button" value="Hello World">
带边框的表单
<form action="">
<fieldset>
<legend>
Personal information:</legend>
Name:<input type="text" size="30"><br>
E-mail:<input type="text" size="30"><br>
Date of birth:<input type="text" size="10">
</fieldset>
 </form>
 重置：
 <input type="reset" value="reset">
 label标签：点击其中一个文本标签选中选项：
 <label for="Male">Male</label>
 <input type="radio" name="sex" id="male" value="male">
 HTML框架
<iframe width=“” height =“”>
noscript 元素，当浏览器不支持脚本或者禁用脚本时，显示其中的内容
Html页面结构：




audio元素：<audio controls>
<source src type>
<audio></audio>之间放置文本内容，文本信息将会显示在不支持audio元素的浏览器中。
video元素：
<video width height  controls>
<source src type>
progress元素
<progress value max>
web存储：
Html5之前，本地存储用的是cookie
web存储的优势：
更安全
更快速
存储的数据量更大
每个服务器请求都不会发送存储的数据
Web存储对象有两种类型：
localStorage:localStorage对象存储的数据没有时间限制
sessionStorage:sessionStorage 针对一个session 进行数据存储。当用户关闭浏览器后，存储的数据会被删除。
Web存储使用的API:不论是localStorage 还是sessionStorage ,可使用的API都相同，常用的有几个：
保存数据：localStorage.setItem(key,value);
读取数据：localStorage.getItem(key);
删除单个数据：localStorage.removeItem(key);
清除所有数据：localStorage.clear();
得到某个索引的key:localStorage .key(index);
Html地理定位：
Geolocation API用于获得用户的地理位置。
Geolocation API 的主要方法是 getCurrentPosition，它用来获得用户的位置。
Svg元素：
<svg width height>
<circle cx cy r fill>
cx和cy属性定义圆点的x和y坐标。如果省略cx和cy，圆的中心会被设置为 (0, 0)。
r属性定义圆的半径。
SVG矩形
<svg width="" height="">
<rect width="" height="" x="" y="" fill="">
svg直线：
<svg width="" height="">
<line x1="" y1="" x2="" y2=""
style="stroke:#000000";(颜色) stroke-linecap:round; stroke-width:20">
svg曲线：
<svg width="" height="">
<polyline style="stroke-linejoin:miter;stroke:black;stroke-width:12; fill:none;" points="100 100,150 150,200 100">
svg椭圆：
<svg width="" height="">
<ellipse cx="" cy="" rx="" ry="" style="fill:red">
rx:椭圆的x半径
ry：椭圆的y半径
SVG多边形：
<svg width="" height="">
<polygon points="100 100,200 200,300 0"
style="sill:red stroke:black;">
svg动画：
用<animate>元素创建：
<svg width="" height="">
<rect width="" height="" fill="">
<animate attributeName="x" from="0" to="300" dur="3s" fill="freeze" repeatCount="2">
attributeName：指定哪个属性需要产生动画效果
from：指定属性的起始值
to：指定属性的结束值
dur：指定动画运行的时间（持续时间）
fill=“freeze|remove”：指定动画播放完毕后是停留在播放的终点还是回到起始位置
repeatCount：指定动画的重复播放次数
要无限重复动画，请使用值 “indefinite” 作为 repeatCount 属性。
svg路径：path元素用于定义一个路径。
下面的命令可用于路径数据
M=moveto
L=lineto
H=horizontal lineto
V=vertical lineto
C=curveto
S=smooth curveto
Q=quadratic Bezer curveto
A=elliptical Arc
Z=closepath
注意：以上命令均允许小写字母，大写字母表示绝对定位，小写字母表示相对定位
示例：
<svg width="500" height="500">
<path d=M150 0 L175 200 L225 200 Z>
</svg>
上面的例子定义了一条路径，它开始于位置150 0，到达位置75 200，然后从那里开始到225 200，最后在150 0关闭路径。
canvas元素
<canvas>元素通常是用脚本来完成图形的绘制
<camvas>只是形容器，你必须用脚本来绘制图形
grtContext()方法可返回一个对象，该对象提供了用于在画布上绘图的方法和属性。
canvas 是一个二维网络
canvas左上角坐标为(0,0)
x坐标向右增加
y坐标向左增加
Canvas - 路径
在Canvas上画线，我们将使用以下两种方法：
moveTo(x,y) 定义线条开始坐标
lineTo(x,y) 定义线条结束坐标
在canvas中绘制圆形, 我们将使用以下方法:
arc(x,y,r,start,stop)

Canvas - 文本
使用 canvas 绘制文本，重要的属性和方法如下：
font - 定义字体
fillText(text,x,y) - 在 canvas 上绘制实心的文本
strokeText(text,x,y) - 在 canvas 上绘制空心的文本

Canvas - 渐变
渐变可以填充在矩形, 圆形, 线条, 文本等等, 各种形状可以自己定义不同的颜色。
以下有两种不同的方式来设置Canvas渐变：
createLinearGradient(x,y,x1,y1) - 创建线条渐变
createRadialGradient(x,y,r,x1,y1,r1) - 创建一个径向/圆渐变
当我们使用渐变对象，必须使用两种或两种以上的停止颜色。
addColorStop()方法指定颜色停止，参数使用坐标来描述，可以是0至1.
使用渐变，设置fillStyle或strokeStyle的值为 渐变，然后绘制形状，如矩形，文本，或一条线。

Canvas - 图像
把一幅图像放置到画布上, 使用以下方法:
drawImage(image,x,y)

 
 